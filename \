from django import forms
from iptracker.models import *

class RecordForm(forms.Form):
  def __init__(self, *args, **kwargs):
    super(RecordForm, self).__init__(*args, **kwargs)
    self.fields['domain'].choices = [(choice.id,choice.name) for choice in Domain.objects.all() ]
  name = forms.CharField(max_length=255)
  domain = forms.TypedChoiceField()
  type = forms.TypedChoiceField(choices=Record.type_choices)
  content = forms.CharField()
  ttl = forms.IntegerField()
  pri = forms.IntegerField()
  comment = forms.CharField(required=False )
  def clean(self):
    cleaned_data = super(RecordForm, self).clean()
    name = cleaned_data.get('name')
    records = Record.objects.all()
    for record in records:
      if name == record.name:
        if record.domain_id == Domain.object.get(id=cleaned.data.get('domain')):
          self.errors['name'] = self.error_class(['domain name already exisits'])
          del cleaned_data['name']
    if name == '1':
      self.errors['name'] = self.error_class(['Not number 1'])
      del cleaned_data['name']
    return cleaned_data

class DomainForm(forms.Form):
  name = forms.CharField(max_length=255)
  type = forms.TypedChoiceField(choices=Domain.type_choices)
  comment = forms.CharField(required=False)

class RangeForm(forms.Form):
  name = forms.CharField(max_length=255)
  start = forms.CharField()
  end = forms.CharField()
  comment = forms.CharField(required=False)
